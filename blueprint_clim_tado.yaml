blueprint:
  name: Climate control Tado Bureau
  description: Consignes d'automatisation de bureaux pour clim suivant mode Ete / Hiver / Desactive pour Tado
  domain: automation
  input:
    climate:
      name: Thermostat
      description: Thermostat Tado contrôlant le chauffage de la pièce
      selector:
        entity:
            domain: climate
    winter_clim:
      name: Bridage température maximale chauffage hiver
      description: Bridage température minimale du chauffage en hiver (si l'utilisateur met plus, la valeur sera réinitialisé a la consigne)
      default: 23
      selector:
        number:
          min: 12.0
          max: 30.0
          unit_of_measurement: '°C'
          mode: slider
          step: 0.1
    summer_clim:
      name: Bridage température minimale clim été
      description: Bridage température minimale de la climatisation en été (si l'utilisateur met moins, la valeur sera réinitialisé a la consigne)
      default: 26
      selector:
        number:
          min: 12.0
          max: 30.0
          unit_of_measurement: '°C'
          mode: slider
          step: 0.1
    summer_mini_clim:
      name: Température minimale piéce pour autoriser la clim été
      description: Température minimale extérieur autorisant l'activation de la clim (si activé alors que température extérieur non atteinte, la clim sera éteinte)
      default: 27
      selector:
        number:
          min: 12.0
          max: 30.0
          unit_of_measurement: '°C'
          mode: slider
          step: 0.1          
    update_frequency:
      name: Mise a jour cycle automation
      description: Cycle d'actualisation, /5 signifie une évaluation toutes les 5 minutes
      default: "/5"
      selector:
        text:
    temperature_ext_entity:
      name: Sonde temperature extérieur
      default: "sensor.coworking_temperature_exterieure"
      selector:
        entity:
          filter:
            - domain: 
                - sensor
              device_class:
                - temperature              
triggers:
  - trigger: time_pattern
    minutes: !input update_frequency
conditions: []
actions:
  - choose:
      - conditions:
          - condition: state
            entity_id: input_select.mode
            state: HIVER
        sequence:
          - if:
              - condition: numeric_state
                entity_id: !input climate
                attribute: temperature
                above: !input winter_clim
              - condition: not
                conditions:
                  - condition: state
                    entity_id: !input climate
                    state: "off"                
            then:
              - action: climate.set_temperature
                metadata: {}
                data:
                  temperature: !input winter_clim
                target:
                  entity_id: !input climate
          - if:
              - condition: time
                after: "18:00:00"
                before: "18:10:00"
              - condition: not
                conditions:
                  - condition: state
                    entity_id: !input climate
                    state: "off"
            then:
              - action: climate.set_temperature
                metadata: {}
                data:
                  temperature: 19
                target:
                  entity_id: !input climate
          - if:
              - condition: time
                after: "19:00:00"
                before: "19:10:00"
              - condition: not
                conditions:
                  - condition: state
                    entity_id: !input climate
                    state: "off"
            then:
              - action: climate.set_temperature
                metadata: {}
                data:
                  temperature: 19
                target:
                  entity_id: !input climate
          - if:
              - condition: time
                after: "20:00:00"
                before: "20:10:00"
            then:
              - action: climate.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id: !input climate
          - if:
              - condition: time
                after: "23:00:00"
                before: "23:59:00"
            then:
              - action: climate.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id: !input climate
      - conditions:
          - condition: state
            entity_id: input_select.mode
            state: ETE
        sequence:
          - if:
              - condition: numeric_state
                entity_id: !input temperature_ext_entity
                below: !input summer_mini_clim
                #attribute: temperature
            then:
              - action: climate.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id: !input climate
          - if:
              - condition: numeric_state
                entity_id: !input climate
                attribute: temperature
                below: !input summer_clim
              - condition: not
                conditions:
                  - condition: state
                    entity_id: !input climate
                    state: "off"                
            then:
              - action: climate.set_temperature
                metadata: {}
                data:
                  temperature: !input summer_clim
                target:
                  entity_id: !input climate
          - if:
              - condition: time
                after: "12:00:00"
                before: "12:10:00"
            then:
              - action: climate.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id: !input climate
          - if:
              - condition: time
                after: "18:00:00"
                before: "18:10:00"
            then:
              - action: climate.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id: !input climate
          - if:
              - condition: time
                after: "19:00:00"
                before: "19:10:00"
            then:
              - action: climate.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id: !input climate
          - if:
              - condition: time
                after: "20:00:00"
                before: "20:10:00"
            then:
              - action: climate.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id: !input climate
          - if:
              - condition: time
                after: "22:00:00"
                before: "22:10:00"
            then:
              - action: climate.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id: !input climate
          - if:
              - condition: time
                after: "23:00:00"
                before: "23:59:00"
            then:
              - action: climate.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id: !input climate
      - conditions:
          - condition: state
            entity_id: input_select.mode
            state: DESACTIVE
        sequence: []
mode: single
